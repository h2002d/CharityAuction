@model CharrityAuction.Models.LotModel

@{
    ViewBag.Title = "CreateLot";
}

<h2>CreateLot</h2>


@using (Html.BeginForm("CreateLot", "Admin"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.Hidden("AnswerCount", Model.Images.Count, new { @id = "AnswerCount" })

    <div class="form-horizontal">
        <h4>LotModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId,
                                 new SelectList(ViewBag.Categories,
                                           "Id", "Name"),
                                            "--Select category--",
                                new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <p>Հայերեն</p>
                @Html.EditorFor(model => model.Name_AM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name_AM, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                <p>English</p>
                @Html.EditorFor(model => model.Name_EN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name_EN, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Description_AM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description_AM, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Description_EN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description_EN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Info_AM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Info_AM, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Info_EN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Info_EN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Policy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Policy_AM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Policy_AM, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Policy_EN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Policy_EN, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Main Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="form-control uploadEditorImage" />
                <input type="button" value="Upload" class="btn btn-default fileUpload" />
                @Html.TextBoxFor(model => model.ImageSource, new { @class = "image", @style = "display:none;" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-group  col-md-10">

                <input id="DeadLine" class="form-control" name="DeadLine" type="datetime-local" value="@Model.DeadLine.ToString("yyyy-MM-ddTmm:hh")" />
                @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.OccureDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-group  col-md-10">
                <input id="OccureDate" class="form-control" name="OccureDate" type="datetime-local" value="@Model.OccureDate.ToString("yyyy-MM-ddTmm:hh")" />

                @Html.ValidationMessageFor(model => model.OccureDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CurrentBid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentBid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentBid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Step, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstimatedValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstimatedValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimatedValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Partner", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-5">
                @Html.DropDownListFor(model => model.PartnerId,
                                 new SelectList(ViewBag.Partners,
                                           "Id", "Name"),
                                            "--Select category--",
                                new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PartnerId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                @Html.Label("Show in celebrity", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isShownCelebrity)
                        @Html.ValidationMessageFor(model => model.isShownCelebrity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        @if (Model.Id != null)
        {


            <div class="form-group">
                <div class="col-md-2">
                </div>
                <div class="col-md-10" id="AnswerContainer">
                    @for (int i = 0; i < Model.Images.Count(); i++)
                    {
                        <div id="answerDiv@(Model.Images[i].Id)">
                            @Html.HiddenFor(m => m.Images[i].Id)
                            @Html.HiddenFor(m => m.Images[i].LotId)
                            <img src="@Model.Images[i].Imagesource" style="width:200px; height:200px;" />
                            <a onclick="removeLotImage(@Model.Images[i].Id)">
                                <img src="~/images/removeIcon.png" />
                            </a>
                            <br />
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-10 col-sm-offset-2">
                    <input type="file" class="form-control uploadEditorImage" />
                    <input type="button" value="Upload" id="@Model.Id" class="btn btn-default fileNewsUploadAdditional" />
                    @Html.TextBoxFor(model => model.ImageSource, new { @class = "image", @style = "display:none;" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-10">
                    <p>Please save news to add images</p>
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Պահպանել" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function OnSuccess() {
        alert("Lot added successfully");
        window.location.href = "/admin/lots";
    }
    function OnFailure() {
        alert("Some errors were occured");
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
