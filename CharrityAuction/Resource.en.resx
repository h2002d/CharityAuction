<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="AMD" xml:space="preserve">
    <value>AMD</value>
  </data>
  <data name="Bid" xml:space="preserve">
    <value>BID</value>
  </data>
  <data name="CurrentBid" xml:space="preserve">
    <value>CURRENT BID</value>
  </data>
  <data name="DeadLine" xml:space="preserve">
    <value>TIME LEFT</value>
  </data>
  <data name="EstimatedValue" xml:space="preserve">
    <value>EST. VALUE</value>
  </data>
  <data name="LastBids" xml:space="preserve">
    <value>Last bids</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Main" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="MainDetails" xml:space="preserve">
    <value>Bid</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Charity Auction</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="MenuGoodBuyers" xml:space="preserve">
    <value>Good buyers</value>
  </data>
  <data name="MenuMedia" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="MenuPhoto" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="MenuReport" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="MenuVideo" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="MenuWhoWeHelp" xml:space="preserve">
    <value>Who do we help</value>
  </data>
  <data name="MenuCoWorkers" xml:space="preserve">
    <value>Partners</value>
  </data>
  <data name="MenuPayment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="MenuRules" xml:space="preserve">
    <value>Rules</value>
  </data>
  <data name="MenuStars" xml:space="preserve">
    <value>Good Stars</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>D.</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>H.</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>M.</value>
  </data>
  <data name="Remains" xml:space="preserve">
    <value>REMAINS</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="EmailConfirmationBid" xml:space="preserve">
    <value>Շնորհավորում ենք: Դուք հաղթել եք բարեգործական Աճուրդում: Խնդրում ենք մինչև _______________ կատարել _________________ դրամ վճարումը Ձեր նախընտրած եղանակով(քարտով, կանխիկ, փոխանցում)` հաղթած ԼՈՏ-ը ստանալու համար:
Կարող եք նաև զանգահարել XXX-XX-XX-XX հեռախոսահամարով, և մեր աշխատակիցը ավելի մանրամասն տեղեկատվություն կտրամադրի Ձեզ վճարման կարգի և ԼՈՏ-ի ստացման պայմանների մասին:Վճարելու համար անցեք հետևյալ  &lt;a href='{0}'&gt;հղումով&lt;/a&gt;</value>
  </data>
  <data name="PaymentApproved" xml:space="preserve">
    <value>Your payment approved our staff will contact you for further information.&lt;br&gt;Your bid number is &lt;b&gt;#{0}&lt;/b&gt;</value>
  </data>
  <data name="Buyer" xml:space="preserve">
    <value>Buyer</value>
  </data>
  <data name="CharityMoney" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="CharityPurpose" xml:space="preserve">
    <value>Purpose</value>
  </data>
  <data name="LoginDontHave" xml:space="preserve">
    <value>Don't have account?</value>
  </data>
  <data name="LoginRegister" xml:space="preserve">
    <value>register</value>
  </data>
  <data name="LoginRegisterAsNewUser" xml:space="preserve">
    <value>as new user</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>Please login to make a bid</value>
  </data>
  <data name="LotDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="LotDayPassed" xml:space="preserve">
    <value>AUCTION CLOSED</value>
  </data>
  <data name="LotDetails" xml:space="preserve">
    <value>Additional Lot Detail</value>
  </data>
  <data name="LotOccureDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="LotRulesRegulations" xml:space="preserve">
    <value>Rules &amp; Regulations</value>
  </data>
  <data name="LotValue" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="NewsReadMore" xml:space="preserve">
    <value>read more...</value>
  </data>
  <data name="RegistrationConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="RegistrationEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="RegistrationLastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="RegistrationName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="RegistrationNickname" xml:space="preserve">
    <value>Create nickname</value>
  </data>
  <data name="RegistrationNicknameInfo" xml:space="preserve">
    <value>Displayed publicly when you bid</value>
  </data>
  <data name="RegistrationPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RegistrationPhone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="RegistrationPrivacy" xml:space="preserve">
    <value>I agree that I have read and accept the terms of the &lt;a href='/Home/Privacy' style="color:#0973bf"&gt;Privacy Policy&lt;/a&gt; and the Terms of Use.</value>
  </data>
  <data name="RegistrationRequiredFields" xml:space="preserve">
    <value>Please fill in required fields</value>
  </data>
  <data name="RegistrationTitle" xml:space="preserve">
    <value>Register to bid.</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacy &amp; Policy</value>
  </data>
  <data name="InvalidLogin" xml:space="preserve">
    <value>Username and/or password are not matching</value>
  </data>
  <data name="RegistrationErrorMessage" xml:space="preserve">
    <value>{0} is empty</value>
  </data>
  <data name="RegistrationPasswordError" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="RegistrationPasswordNotMatching" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="UserSettings" xml:space="preserve">
    <value>Change your account settings</value>
  </data>
  <data name="PassedSecondString" xml:space="preserve">
    <value />
  </data>
  <data name="MinBidAlert" xml:space="preserve">
    <value>Amount is lower than the min bid amount</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchResult" xml:space="preserve">
    <value>Search results for:</value>
  </data>
  <data name="Ended" xml:space="preserve">
    <value>Closed lots</value>
  </data>
  <data name="ForgetPassword" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="PleaseConfirm" xml:space="preserve">
    <value>Email not confirmed, please confirm your email for further actions</value>
  </data>
  <data name="EmailCheck" xml:space="preserve">
    <value>Please check your email to reset your password.</value>
  </data>
  <data name="EmailReset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="EnterMail" xml:space="preserve">
    <value>Enter your email.</value>
  </data>
  <data name="PasswodReset" xml:space="preserve">
    <value>Password Reset</value>
  </data>
</root>